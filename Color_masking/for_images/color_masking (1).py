# -*- coding: utf-8 -*-
"""Color_Masking_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l9Wdwl7eIru40ZPVA5pdjQ4SglGILqMw
"""

# @title imports
import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow
import colorsys
import os

# @title Color Masking function

def color_masking(image):
    # Convert to HSV
    hsv = cv.cvtColor(image, cv.COLOR_BGR2HSV)

    lower_brown = np.array([4, 100, 10])
    upper_brown = np.array([17, 255, 150])

    # Create a binary mask
    bin_mask = cv.inRange(hsv, lower_brown, upper_brown)
    print("Before Closing")
    cv2_imshow(bin_mask)
    bin_mask = cv.GaussianBlur(bin_mask, (1, 1), 0)

    kernel1 = np.ones((9, 9), np.uint8)
    kernel2 = np.ones((3, 3), np.uint8)

    # Apply erosion followed by dilation (closing)
    closing = cv.morphologyEx(bin_mask, cv.MORPH_CLOSE, kernel1)

    # Apply dilation
    # mask3 = cv.dilate(closing, kernel2, iterations=1)
    print("After Closing")
    cv2_imshow(closing)

    result = cv.bitwise_and(image, image, mask=closing)

    return result

# @title final result

image_folder = "/content/drive/MyDrive/Color_masking_2"
image_paths = [os.path.join(image_folder, file) for file in os.listdir(image_folder) if file.endswith(('.jpg', '.jpeg', '.png', '.webp'))]

# print("My Brown Range: ")
# range = cv.imread("/content/drive/MyDrive/Color_masking_2/main-qimg-2aa3f7b98cec21b4ad252c8f8389618e.webp")
# cv2_imshow(range)

for image_path in image_paths:
    img = cv.imread(image_path)
    brown_image = color_masking(img)

    print("Original image")
    cv2_imshow(img)
    print("Final Result")
    cv2_imshow(brown_image)